{{- if .Values.executor.enabled -}}
apiVersion: v1
kind: Secret
metadata:
  name: terrakube-executor-secrets
type: Opaque
stringData:
  # General Settings
  AzBuilderApiUrl: 'http://terrakube-api-service:8080'
  InternalSecret: '{{ .Values.security.internalSecret | b64enc }}'

  ExecutorFlagBatch: 'false'
  ExecutorFlagDisableAcknowledge: 'false'
  TerrakubeToolsRepository: '{{ .Values.executor.properties.toolsRepository }}'
  TerrakubeToolsBranch: '{{ .Values.executor.properties.toolsBranch }}'
  TerrakubeEnableSecurity: 'true'
  TerrakubeRegistryDomain: '{{ .Values.ingress.registry.domain }}'
  TerrakubeApiUrl: '{{- if .Values.ingress.useTls }}https{{else}}http{{ end }}://{{ .Values.ingress.api.domain }}'



  {{- if .Values.storage.defaultStorage -}}

  #AWS S3 Storage using MINIO
  TerraformStateType: 'AwsTerraformStateImpl'
  AwsTerraformStateAccessKey: '{{ .Values.minio.auth.rootUser }}'
  AwsTerraformStateSecretKey: '{{ .Values.minio.auth.rootPassword }}'
  AwsTerraformStateBucketName: '{{ .Values.minio.defaultBuckets }}'
  AwsTerraformStateRegion: '{{ .Values.storage.default.region }}'
  TerraformOutputType: 'AwsTerraformOutputImpl'
  AwsTerraformOutputAccessKey: '{{ .Values.minio.auth.rootUser }}'
  AwsTerraformOutputSecretKey: '{{ .Values.minio.auth.rootPassword }}'
  AwsTerraformOutputBucketName: '{{ .Values.minio.defaultBuckets }}'
  AwsTerraformOutputRegion: '{{ .Values.storage.default.region }}'
  AwsEndpoint: '{{ .Values.storage.default.endpoint }}'

  {{ else }}

  {{- if and (.Values.storage.azure).storageAccountName (.Values.storage.azure).storageAccountAccessKey }}
  #Azure Storage
  TerraformStateType: 'AzureTerraformStateImpl'
  AzureTerraformStateResourceGroup: '{{ .Values.storage.azure.storageAccountResourceGroup }}'
  AzureTerraformStateStorageAccountName: '{{ .Values.storage.azure.storageAccountName }}'
  AzureTerraformStateStorageContainerName: 'tfstate'
  AzureTerraformStateStorageAccessKey: '{{ .Values.storage.azure.storageAccountAccessKey }}'
  TerraformOutputType: 'AzureTerraformOutputImpl'
  AzureTerraformOutputAccountName: '{{ .Values.storage.azure.storageAccountName }}'
  AzureTerraformOutputAccountKey: '{{ .Values.storage.azure.storageAccountAccessKey }}'
  {{- end }}
  
  {{- if and (.Values.storage.aws).bucketName (.Values.storage.aws).accessKey (.Values.storage.aws).secretKey (.Values.storage.aws).region  }}
  #AWS S3 Storage
  TerraformStateType: 'AwsTerraformStateImpl'
  AwsTerraformStateAccessKey: '{{ .Values.storage.aws.accessKey }}'
  AwsTerraformStateSecretKey: '{{ .Values.storage.aws.secretKey }}'
  AwsTerraformStateBucketName: '{{ .Values.storage.aws.bucketName }}'
  AwsTerraformStateRegion: '{{ .Values.storage.aws.region }}'
  TerraformOutputType: 'AwsTerraformOutputImpl'
  AwsTerraformOutputAccessKey: '{{ .Values.storage.aws.accessKey }}'
  AwsTerraformOutputSecretKey: '{{ .Values.storage.aws.secretKey }}'
  AwsTerraformOutputBucketName: '{{ .Values.storage.aws.bucketName }}'
  AwsTerraformOutputRegion: '{{ .Values.storage.aws.region }}'
  AwsEndpoint: ''
  {{- end }}

  {{- if and (.Values.storage.minio).bucketName (.Values.storage.minio).accessKey (.Values.storage.minio).secretKey (.Values.storage.minio).endpoint  }}
  #MINIO S3 Storage
  TerraformStateType: 'AwsTerraformStateImpl' # MINIO USES THE AWS LIBRARY
  AwsTerraformStateAccessKey: '{{ .Values.storage.minio.accessKey }}'
  AwsTerraformStateSecretKey: '{{ .Values.storage.minio.secretKey }}'
  AwsTerraformStateBucketName: '{{ .Values.storage.minio.bucketName }}'
  AwsTerraformStateRegion: 'us-east-1' # THIS IS NEEDED IN ORDER TO CONNECT TO MINIO USING THE AWS CODE, HARD CODED IT HAS NO EFFECT
  TerraformOutputType: 'AwsTerraformOutputImpl' # MINIO USES THE AWS LIBRARY
  AwsTerraformOutputAccessKey: '{{ .Values.storage.minio.accessKey }}'
  AwsTerraformOutputSecretKey: '{{ .Values.storage.minio.secretKey }}'
  AwsTerraformOutputBucketName: '{{ .Values.storage.minio.bucketName }}'
  AwsTerraformOutputRegion: 'us-east-1' # THIS IS NEEDED IN ORDER TO CONNECT TO MINIO USING THE AWS CODE, HARD CODED IT HAS NO EFFECT
  AwsEndpoint: '{{ .Values.storage.minio.endpoint }}'
  {{- end }}

  {{- if and (.Values.storage.gcp).projectId (.Values.storage.gcp).bucketName (.Values.storage.gcp).credentials  }}
  #GCP Storage Bucket
  TerraformStateType: 'GcpTerraformStateImpl'
  GcpTerraformStateProjectId: '{{ .Values.storage.gcp.projectId }}'
  GcpTerraformStateBucketName: '{{ .Values.storage.gcp.bucketName }}'
  GcpTerraformStateCredentials: '{{ .Values.storage.gcp.credentials | b64enc }}'
  TerraformOutputType: 'GcpTerraformOutputImpl'
  GcpTerraformOutputProjectId: '{{ .Values.storage.gcp.projectId }}'
  GcpTerraformOutputBucketName: '{{ .Values.storage.gcp.bucketName }}'
  GcpTerraformOutputCredentials: '{{ .Values.storage.gcp.credentials | b64enc }}'
  {{- end }}

  {{- end }} 

  #Custom terraform releases url
  CustomTerraformReleasesUrl : '{{ .Values.api.terraformReleasesUrl }}' 

{{ end }}