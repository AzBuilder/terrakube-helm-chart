{{- if and .Values.ingress.dex.enabled .Values.dex.enabled }}
{{- $dexServiceName := printf "%s-dex" .Release.Name }}
{{- if eq .Values.ingress.controller "generic" }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.name }}-dex
  labels:
    app: {{ .Values.name }}-dex
  {{- with .Values.ingress.dex.annotations }}
  annotations:
    {{- range $key, $value := . }}
    {{ $key }}: {{ tpl (toString $value) $ | quote }}
    {{- end }}
  {{- end }}
spec:
  {{- if .Values.ingress.api.ingressClassName }}
  ingressClassName: {{ .Values.ingress.api.ingressClassName }}
  {{- end }}
  rules:
    - host: {{ .Values.ingress.api.domain }}
      http:
        paths:
          - path: {{ .Values.ingress.dex.path }}
            pathType: {{ .Values.ingress.dex.pathType }}
            backend:
              service:
                name: {{ $dexServiceName }}
                port:
                  number: 5556
  {{- if .Values.ingress.useTls }}
  tls:
    - hosts:
      {{- if .Values.ingress.includeTlsHosts }}
        - {{ .Values.ingress.api.domain }}
      {{- end }}
      secretName: {{ .Values.ingress.api.tlsSecretName }}
  {{- end }}
{{- else if and (eq .Values.ingress.controller "aws") .Values.ingress.aws.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.name }}-dex
  labels:
    app: {{ .Values.name }}-dex
  annotations:
    # For AWS shared load balancer
    {{- if and .Values.ingress.aws.sharedLoadBalancer.enabled .Values.ingress.aws.sharedLoadBalancer.groupName }}
    alb.ingress.kubernetes.io/group.name: {{ .Values.ingress.aws.sharedLoadBalancer.groupName }}
    {{- end }}
    {{- range $key, $value := .Values.ingress.aws.annotations }}
    {{ $key }}: {{ tpl (toString $value) $ | quote }}
    {{- end }}
    {{- if .Values.ingress.aws.certificateArn }}
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.ingress.aws.certificateArn }}
    {{- end }}
    {{- range $key, $value := .Values.ingress.dex.annotations }}
    {{ $key }}: {{ tpl (toString $value) $ | quote }}
    {{- end }}
spec:
  rules:
    - host: {{ .Values.ingress.api.domain }}
      http:
        paths:
          - path: {{ .Values.ingress.dex.path }}
            pathType: {{ .Values.ingress.dex.pathType }}
            backend:
              service:
                name: {{ $dexServiceName }}
                port:
                  number: 5556
{{- else if and (eq .Values.ingress.controller "gke") .Values.ingress.gke.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.name }}-dex
  labels:
    app: {{ .Values.name }}-dex
  annotations:
    # GKE shared load balancer annotations
    {{- if .Values.ingress.gke.sharedLoadBalancer.enabled }}
    {{- if .Values.ingress.gke.sharedLoadBalancer.staticIPName }}
    kubernetes.io/ingress.global-static-ip-name: {{ .Values.ingress.gke.sharedLoadBalancer.staticIPName }}
    {{- else if .Values.ingress.gke.sharedLoadBalancer.staticIPAddress }}
    kubernetes.io/ingress.global-static-ip: {{ .Values.ingress.gke.sharedLoadBalancer.staticIPAddress }}
    {{- end }}
    {{- end }}
    # Apply managed certificate if enabled
    {{- if .Values.ingress.gke.managedCertificate.create }}
    networking.gke.io/managed-certificates: {{ .Values.name }}-certificate
    {{- else if and .Values.ingress.gke.managedCertificate.useExisting .Values.ingress.gke.managedCertificate.existingCertName }}
    networking.gke.io/managed-certificates: {{ .Values.ingress.gke.managedCertificate.existingCertName }}
    {{- end }}
    # Apply frontend config if enabled
    {{- if .Values.ingress.gke.frontendConfig.create }}
    networking.gke.io/v1beta1.FrontendConfig: {{ .Values.name }}-frontend-config
    {{- end }}
    # Apply dex-specific backend config
    {{- if .Values.ingress.gke.backendConfig.create }}
    cloud.google.com/backend-config: '{"default": "{{ .Values.name }}-dex-backend-config"}'
    {{- end }}
    # Apply ExternalDNS proxy configuration
    {{- if .Values.ingress.gke.externalDNS }}
    {{- if .Values.ingress.gke.externalDNS.perIngressProxy }}
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "{{ .Values.ingress.gke.externalDNS.perIngressProxy.dex }}"
    {{- else }}
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "{{ .Values.ingress.gke.externalDNS.proxyEnabled }}"
    {{- end }}
    {{- end }}
    # Apply GKE annotations
    {{- range $key, $value := .Values.ingress.gke.annotations }}
    {{ $key }}: {{ tpl (toString $value) $ | quote }}
    {{- end }}
    # Apply Dex specific annotations
    {{- range $key, $value := .Values.ingress.dex.annotations }}
    {{ $key }}: {{ tpl (toString $value) $ | quote }}
    {{- end }}
spec:
  rules:
    - host: {{ .Values.ingress.api.domain }}
      http:
        paths:
          - path: {{ .Values.ingress.dex.path }}
            pathType: {{ .Values.ingress.dex.pathType }}
            backend:
              service:
                name: {{ $dexServiceName }}
                port:
                  number: 5556
{{- end }}
{{- end }}