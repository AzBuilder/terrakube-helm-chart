{{- if .Values.registry.enabled -}}
apiVersion: v1
kind: Secret
metadata:
  name: terrakube-registry-secrets
type: Opaque
stringData:
  AzBuilderRegistry: '{{- if .Values.ingress.useTls }}https{{else}}http{{ end }}://{{ .Values.ingress.registry.domain }}'
  AzBuilderApiUrl: 'http://terrakube-api-service:8080'
  AuthenticationValidationTypeRegistry: 'DEX'
  PatSecret: '{{ .Values.security.patSecret | b64enc}}'
  InternalSecret: '{{ .Values.security.internalSecret | b64enc }}'
  DexIssuerUri: '{{ .Values.dex.config.issuer }}'
  TerrakubeEnableSecurity: 'true'
  TerrakubeUiURL: '{{- if .Values.ingress.useTls }}https{{else}}http{{ end }}://{{ .Values.ingress.ui.domain }}'
  AppClientId: '{{ .Values.security.dexClientId }}'
  AppIssuerUri: '{{- if .Values.ingress.useTls }}https{{else}}http{{ end }}://{{ .Values.ingress.api.domain }}/dex'


  {{- if .Values.storage.defaultStorage -}}

  #AWS S3 Storage using MINIO
  RegistryStorageType: 'AwsStorageImpl'
  AwsStorageAccessKey: '{{ .Values.minio.auth.rootUser }}'
  AwsStorageSecretKey: '{{ .Values.minio.auth.rootPassword }}'
  AwsStorageBucketName: '{{ .Values.minio.defaultBuckets }}'
  AwsStorageRegion: '{{ .Values.storage.default.region }}'
  AwsEndpoint: '{{ .Values.storage.default.endpoint }}'

  {{ else }}

  {{- if and (.Values.storage.azure).storageAccountName (.Values.storage.azure).storageAccountAccessKey }}
  #Azure Storage
  RegistryStorageType: 'AzureStorageImpl'
  AzureAccountName: '{{ .Values.storage.azure.storageAccountName }}'
  AzureAccountKey: '{{ .Values.storage.azure.storageAccountAccessKey }}'
  {{- end }}
  
  {{- if and (.Values.storage.aws).bucketName (.Values.storage.aws).accessKey (.Values.storage.aws).secretKey (.Values.storage.aws).region  }}
  #Aws Storage
  RegistryStorageType: 'AwsStorageImpl'
  AwsStorageAccessKey: '{{ .Values.storage.aws.accessKey }}'
  AwsStorageSecretKey: '{{ .Values.storage.aws.secretKey }}'
  AwsStorageBucketName: '{{ .Values.storage.aws.bucketName }}'
  AwsStorageRegion: '{{ .Values.storage.aws.region }}'
  AwsEndpoint: ''
  {{- end }}

  {{- if and (.Values.storage.minio).bucketName (.Values.storage.minio).accessKey (.Values.storage.minio).secretKey (.Values.storage.minio).endpoint  }}
  #MINIO Storage
  RegistryStorageType: 'AwsStorageImpl'
  AwsStorageAccessKey: '{{ .Values.storage.minio.accessKey }}'
  AwsStorageSecretKey: '{{ .Values.storage.minio.secretKey }}'
  AwsStorageBucketName: '{{ .Values.storage.minio.bucketName }}'
  AwsStorageRegion: 'us-east-1' # THIS IS NEEDED IN ORDER TO CONNECT TO MINIO USING THE AWS CODE, HARD CODED IT HAS NO EFFECT
  AwsEndpoint: '{{ .Values.storage.minio.endpoint }}'
  {{- end }}

  {{- if and (.Values.storage.gcp).projectId (.Values.storage.gcp).bucketName (.Values.storage.gcp).credentials  }}
  #Gcp Storage
  RegistryStorageType: 'GcpStorageImpl'
  GcpStorageProjectId: '{{ .Values.storage.gcp.projectId }}'
  GcpStorageBucketName: '{{ .Values.storage.gcp.bucketName }}'
  GcpStorageCredentialsBase64: '{{ .Values.storage.gcp.credentials | b64enc }}'
  {{- end }}

  {{- end }} 
{{ end }}