{{- if .Values.registry.enabled -}}
apiVersion: v1
kind: Secret
metadata:
  name: terrakube-registry-secrets
type: Opaque
stringData:
  AzBuilderRegistry: 'https://{{ .Values.ingress.registry.domain }}'
  AzBuilderApiUrl: 'http://terrakube-api-service:8080'
  AuthenticationValidationTypeRegistry: 'DEX'
  PatSecret: '{{ .Values.security.patSecret }}'
  InternalSecret: '{{ .Values.security.internalSecret }}'
  DexIssuerUri: '{{ .Values.security.dexIssuerUri }}'
  InternalSecret: '{{ .Values.security.internalSecret }}'
  TerrakubeEnableSecurity: 'true'
  TerrakubeUiURL: 'https://{{ .Values.ingress.ui.domain }}'
  
  {{- if and (.Values.storage.azure).storageAccountName (.Values.storage.azure).storageAccountAccessKey }}
  #Azure Storage
  RegistryStorageType: 'AzureStorageImpl'
  AzureAccountName: '{{ .Values.storage.azure.storageAccountName }}'
  AzureAccountKey: '{{ .Values.storage.azure.storageAccountAccessKey }}'
  {{- end }}
  
  {{- if and (.Values.storage.aws).bucketName (.Values.storage.aws).accessKey (.Values.storage.aws).secretKey (.Values.storage.aws).region  }}
  #Aws Storage
  RegistryStorageType: 'AwsStorageImpl'
  AwsStorageAccessKey: '{{ .Values.storage.aws.accessKey }}'
  AwsStorageSecretKey: '{{ .Values.storage.aws.secretKey }}'
  AwsStorageBucketName: '{{ .Values.storage.aws.bucketName }}'
  AwsStorageRegion: '{{ .Values.storage.aws.region }}'
  {{- end }}

  {{- if and (.Values.storage.gcp).projectId (.Values.storage.gcp).bucketName (.Values.storage.gcp).credentials  }}
  #Gcp Storage
  RegistryStorageType: 'GcpStorageImpl'
  GcpStorageProjectId: '{{ .Values.storage.gcp.projectId }}'
  GcpStorageBucketName: '{{ .Values.storage.gcp.bucketName }}'
  GcpStorageCredentialsBase64: '{{ .Values.storage.gcp.credentials }}'
  {{- end }}
{{ end }}